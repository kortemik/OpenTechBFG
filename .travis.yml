language: cpp

sudo: false

os:
  - linux
  - osx
matrix:
  allow_failures:
    - os: osx  
compiler:
  - gcc
  - clang
  - CXX=g++-mingw-w64-x86-64; g++

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "UE8I6ubHMARmKBNBtDDW34DI+PlFe/g2XR4DStfAg34R193nevkpDj+WqBN88VCxN9Z57CMI5fweQUc6r5L5ZuQns8XKe4lu0AmtroOHf+e/FUDlSGz9DUZZk6oTwEtKrsg548ZTanU+fiFkwbvKwx/nHLdYzsI8PYgmw7vci8w="

addons:
  coverity_scan:
    project:
      name: "OpenTechEngine/OpenTechBFG"
      description: "Build submitted via Travis CI"
    notification_email: kordex@gmail.com
    build_command_prepend: 'mkdir build && cd build &&  if [ \"$CXX\" = \"g++-mingw-w64-x86-64\" ]; then cmake -G \"Eclipse CDT4 - Unix Makefiles\" -DCMAKE_TOOLCHAIN_FILE=../scripts/mingw32.toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DSDL2=OFF -DBUNDLED_FREETYPE=ON -DBUNDLED_OPENAL=ON ../ ;else cmake -G \"Eclipse CDT4 - Unix Makefiles\" -DCMAKE_BUILD_TYPE=Debug -DSDL2=OFF ../;fi'
    build_command:   "make -j 9"
    branch_pattern: coverity
  apt:
    packages:
      - libsdl1.2-dev
      - libopenal-dev
      - gcc
      - cmake
      - g++-mingw-w64-x86-64
      - gcc-mingw-w64-x86-64
      - binutils-mingw-w64-x86-64

before_install:
  # this is allowed to fail so that pull requests can be built too
  - openssl aes-256-cbc -K $encrypted_24fdd259e571_key -iv $encrypted_24fdd259e571_iv -in .travis/id_rsa.enc -out .travis/id_rsa -d || true

install:
 - true

script: mkdir -p build && cd build && if [ "$CXX" = "g++-mingw-w64-x86-64" ]; then cmake -G "Eclipse CDT4 - Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=../scripts/mingw32.toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DSDL2=OFF -DBUNDLED_FREETYPE=ON -DBUNDLED_OPENAL=ON ../ ;else cmake -G "Eclipse CDT4 - Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DSDL2=OFF ../;fi && make

after_success:
 - cd ..
 - chmod 600 .travis/id_rsa
 - mkdir OpenTechEngine
 - cp -a base OpenTechEngine/
 - if [ "$CXX" = "g++-mingw-w64-x86-64" ]; then cp build/OpenTechEngine.exe OpenTechEngine/; find build -name \*dll -exec cp '{}' OpenTechEngine/ \; ; cp libs/openal/openal-soft/bin/Win64/soft_oal.dll OpenTechEngine/OpenAL32.dll ; cp /usr/lib/gcc/x86_64-w64-mingw32/4.8/libgcc_s_sjlj-1.dll /usr/lib/gcc/x86_64-w64-mingw32/4.8/libstdc++-6.dll /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll OpenTechEngine/ ; else cp build/OpenTechEngine OpenTechEngine/; fi
 - tar cjf OpenTechEngine.tar.bz2 OpenTechEngine
 - scp -B -i .travis/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no OpenTechEngine.tar.bz2 kordex@frs.sourceforge.net:/home/frs/project/testrepositoryproject/TestRel/$(date +%s).$CXX.OpenTechEngine.tar.bz2

after_failure:
 - cd ..
 - chmod 600 .travis/id_rsa
 - find build/ > build/build.files.txt
 - find build/ -type f -iname \*rsp -o -iname \*log -o -iname \*txt -exec tar rf OpenTechFailure.tar '{}' \;
 - bzip2 -9 OpenTechFailure.tar
 - scp -B -i .travis/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no OpenTechFailure.tar.bz2 kordex@frs.sourceforge.net:/home/frs/project/testrepositoryproject/TestRel/$(date +%s).failed_build.$CXX.tar.bz2
